// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}",
        "x-logo": {
            "altText": "Mowa Logo",
            "url": "/assets/mowa-logo.png"
        }
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/messages": {
            "post": {
                "description": "Send messages to one or more recipients via iMessage",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "messages"
                ],
                "summary": "Send messages to recipients",
                "parameters": [
                    {
                        "description": "Message request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/main.MessageRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Messages sent successfully",
                        "schema": {
                            "$ref": "#/definitions/main.MessageResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request - invalid input",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/storage": {
            "get": {
                "description": "Handle both GET and POST requests for storage operations with JSON payload",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "storage"
                ],
                "summary": "Handle storage operations",
                "parameters": [
                    {
                        "description": "Storage request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/main.StorageRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Storage operation completed successfully",
                        "schema": {
                            "$ref": "#/definitions/main.StorageResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request - invalid input",
                        "schema": {
                            "$ref": "#/definitions/main.StorageResponse"
                        }
                    },
                    "404": {
                        "description": "File not found",
                        "schema": {
                            "$ref": "#/definitions/main.StorageResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/main.StorageResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Handle both GET and POST requests for storage operations with JSON payload",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "storage"
                ],
                "summary": "Handle storage operations",
                "parameters": [
                    {
                        "description": "Storage request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/main.StorageRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Storage operation completed successfully",
                        "schema": {
                            "$ref": "#/definitions/main.StorageResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request - invalid input",
                        "schema": {
                            "$ref": "#/definitions/main.StorageResponse"
                        }
                    },
                    "404": {
                        "description": "File not found",
                        "schema": {
                            "$ref": "#/definitions/main.StorageResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/main.StorageResponse"
                        }
                    }
                }
            }
        },
        "/api/storage/{path}": {
            "get": {
                "description": "Handle GET requests for storage operations where path is provided in URL",
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "storage"
                ],
                "summary": "Handle storage operations with URL path",
                "parameters": [
                    {
                        "type": "string",
                        "default": "/example.txt",
                        "description": "File path",
                        "name": "path",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "File content",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad request - invalid path",
                        "schema": {
                            "$ref": "#/definitions/main.StorageResponse"
                        }
                    },
                    "404": {
                        "description": "File not found",
                        "schema": {
                            "$ref": "#/definitions/main.StorageResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/main.StorageResponse"
                        }
                    }
                }
            }
        },
        "/api/uptime": {
            "get": {
                "description": "Get the current system uptime information",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "system"
                ],
                "summary": "Get system uptime",
                "responses": {
                    "200": {
                        "description": "Uptime information retrieved successfully",
                        "schema": {
                            "$ref": "#/definitions/main.UptimeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "main.MessageRequest": {
            "description": "Request to send messages to recipients",
            "type": "object",
            "required": [
                "message",
                "to"
            ],
            "properties": {
                "message": {
                    "description": "@Description The message content to send\n@Example \"Hello from Mowa API!\"",
                    "type": "string"
                },
                "to": {
                    "description": "@Description List of phone numbers or group names to send messages to\n@Example [\"+1234567890\", \"family\", \"+0987654321\"]",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "main.MessageResponse": {
            "description": "Response containing results of message sending operations",
            "type": "object",
            "properties": {
                "results": {
                    "description": "@Description List of results for each recipient",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/main.MessageResult"
                    }
                }
            }
        },
        "main.MessageResult": {
            "description": "Result of sending a message to a single recipient",
            "type": "object",
            "properties": {
                "error": {
                    "description": "@Description Error message if the message failed to send",
                    "type": "string"
                },
                "recipient": {
                    "description": "@Description The recipient phone number or group name\n@Example \"+1234567890\"",
                    "type": "string"
                },
                "success": {
                    "description": "@Description Whether the message was sent successfully",
                    "type": "boolean"
                }
            }
        },
        "main.StorageRequest": {
            "description": "Request for file storage operations",
            "type": "object",
            "properties": {
                "content": {
                    "description": "@Description File content (required for POST operations)\n@Example \"Hello, this is file content!\"",
                    "type": "string"
                },
                "path": {
                    "description": "@Description File path relative to storage directory\n@Example \"/documents/example.txt\"",
                    "type": "string"
                }
            }
        },
        "main.StorageResponse": {
            "description": "Response from file storage operations",
            "type": "object",
            "properties": {
                "content": {
                    "description": "@Description File content (for GET operations) or success message (for POST operations)",
                    "type": "string"
                },
                "error": {
                    "description": "@Description Error message if the operation failed",
                    "type": "string"
                },
                "success": {
                    "description": "@Description Whether the operation was successful",
                    "type": "boolean"
                }
            }
        },
        "main.UptimeResponse": {
            "description": "System uptime information",
            "type": "object",
            "properties": {
                "formatted": {
                    "description": "@Description Formatted uptime string (same as uptime)\n@Example \"2 days, 3 hours, 45 minutes\"",
                    "type": "string"
                },
                "uptime": {
                    "description": "@Description Human-readable uptime string\n@Example \"2 days, 3 hours, 45 minutes\"",
                    "type": "string"
                },
                "uptimeSeconds": {
                    "description": "@Description Uptime in seconds\n@Example 176700",
                    "type": "number"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "Mowa API",
	Description:      "A simple API for sending messages and managing file storage",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
